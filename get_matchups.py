import os
import psycopg2
import sys

def get_db_connection():
    """Establishes a connection to the PostgreSQL database."""
    try:
        conn = psycopg2.connect(
            host=os.getenv('DB_HOST', '192.168.1.23'),
            database=os.getenv('DB_NAME', 'football_tracker'),
            user=os.getenv('DB_USER', 'postgres'),
            password=os.getenv('DB_PASSWORD', 'korn5676'),
            port=int(os.getenv('DB_PORT', 5432))
        )
        return conn
    except (Exception, psycopg2.DatabaseError) as error:
        print(f"Error connecting to database: {error}")
        sys.exit(1)

def get_game_matchups(game_ids):
    """
    Fetches game matchups for a list of game_ids.
    """
    if not game_ids:
        return []

    conn = None
    try:
        conn = get_db_connection()
        cur = conn.cursor()

        # Prepare a placeholder for the IN clause
        placeholders = ','.join(['%s'] * len(game_ids))
        query = f"""
            SELECT
                g.game_id,
                g.season,
                ht.abbreviation AS home_team,
                at.abbreviation AS away_team
            FROM
                public.games g
            JOIN
                public.teams ht ON g.home_team_id = ht.id
            JOIN
                public.teams at ON g.away_team_id = at.id
            WHERE
                g.game_id IN ({placeholders})
        """

        cur.execute(query, tuple(game_ids))
        rows = cur.fetchall()
        cur.close()
        return rows
    except (Exception, psycopg2.DatabaseError) as error:
        print(f"Error fetching game matchups: {error}")
        return []
    finally:
        if conn is not None:
            conn.close()

def main():
    game_ids = ['401547755', '401671870', '401547617', '401671875', '401671763', '401671780', '401547417', '401671600', '401772723', '401772729', '401671796', '401547423', '401671821', '401547573', '401671739', '401547628', '401547481', '401671707', '401547614', '401547420', '401671686', '401671864', '401547514', '401547406', '401671726', '401671599', '401547410', '401547545', '401671489', '401547607', '401671620', '401671665', '401671684', '401671766', '401671859', '401547582', '401671778', '401772510', '401547572', '401547754', '401671699', '401671802', '401671653', '401547509', '401547544', '401772810', '401547564', '401671491', '401547640', '401671757', '401547595', '401671693', '401547460', '401547416', '401671626', '401547464', '401547412', '401547502', '401547559', '401671724', '401547409', '401547580', '401671816', '401547400', '401547437', '401671794', '401671732', '401547636', '401671815', '401547612', '401671752', '401772936', '401671657', '401547592', '401547518', '401547425', '401671703', '401671852', '401671850', '401547418', '401547403', '401772727', '401547758', '401671652', '401547463', '401547530', '401547511', '401671624', '401671628', '401671789', '401547622', '401547574', '401671677', '401547505', '401547487', '401547471', '401671641', '401671630', '401671797', '401547523', '401772720', '401671825', '401547753', '401547571', '401671863', '401547578', '401547242', '401671785', '401547616', '401547493', '401671853', '401547482', '401772830', '401772811', '401671769', '401547501', '401547472', '401547495', '401772730', '401547615', '401671743', '401547424', '401671861', '401547757', '401671741', '401547467', '401547587', '401547454', '401772725', '401671746', '401547491', '401547566', '401547584', '401671662', '401671805', '401547477', '401671760', '401671676', '401547231', '401547480', '401547508', '401547540', '401772714', '401547539', '401671710', '401671755', '401547442', '401547500', '401547503', '401547538', '401547399', '401547534', '401671644', '401671820', '401547611', '401671731', '401671651', '401671675', '401671871', '401772837', '401547499', '401547228', '401671809', '401671745', '401671681', '401547637', '401547436', '401547496', '401547602', '401671774', '401671690', '401671799', '401547556', '401671695', '401671645', '401547535', '401671812', '401671822', '401547589', '401671781', '401772728', '401671623', '401671715', '401772722', '401547588', '401547438', '401671667', '401671725', '401547466', '401671857', '401547650', '401671656', '401671673', '401547633', '401547413', '401547620', '401671860', '401547492', '401547485', '401547623', '401671664', '401671793', '401547625', '401671824', '401671721', '401547421', '401547621', '401547227', '401671627', '401671633', '401547528', '401547446', '401671846', '401671646', '401671814', '401671764', '401547230', '401671851', '401547596', '401547475', '401547456', '401671637', '401671631', '401671678', '401547624', '401547489', '401671649', '401547408', '401671720', '401671655', '401547229', '401547429', '401671729', '401547517', '401547577', '401671714', '401671719', '401547510', '401671817', '401547504', '401547476', '401671705', '401547606', '401772836', '401547490', '401671874', '401547414', '401547610', '401671702', '401547513', '401547646', '401547647', '401547569', '401671792', '401671639', '401671733', '401547478', '401671728', '401671680', '401772724', '401671697', '401547483', '401671698', '401671722', '401671823', '401772834', '401671713', '401671784', '401671744', '401547444', '401547415', '401671798', '401671709', '401671854', '401547405', '401547453', '401671670', '401547458', '401671749', '401671872', '401547585', '401671648', '401547586', '401547507', '401547626', '401547570', '401547550', '401671666', '401547644', '401671660', '401547603', '401547473', '401547352', '401671669', '401671640', '401671790', '401547407', '401772719', '401671849', '401547512', '401671708', '401547431', '401547537', '401671748', '401671811', '401547583', '401547497', '401671712', '401671706', '401547653', '401671734', '401547452', '401547515', '401547543', '401671867', '401547531', '401671622', '401547527', '401547479', '401671650', '401547553', '401671775', '401547750', '401671786', '401671736', '401671810', '401671848', '401671791', '401547525', '401547469', '401671689', '401671877', '401671672', '401547462', '401547749', '401671740', '401547652', '401547380', '401547601', '401671700', '401547448', '401547276', '401547642', '401671754', '401772718', '401671658', '401671619', '401671647', '401547526', '401547441', '401671717', '401547751', '401547484', '401671727', '401547457', '401671661', '401547554', '401671747', '401547401', '401671751', '401547552', '401671776', '401671779', '401547241', '401671756', '401547604', '401547522', '401547451', '401547561', '401671856', '401671866', '401671835', '401547435', '401547428', '401671723', '401671668', '401547398', '401671495', '401671813', '401547565', '401671855', '401547470', '401671682', '401772828', '401671787', '401671773', '401547433', '401671643', '401671869', '401671868', '401671759', '401547439', '401671873', '401547379', '401547542', '401671683', '401547445', '401671803', '401671771', '401547579', '401547354', '401547551', '401547630', '401671819', '401671616', '401547605', '401547631', '401547562', '401772919', '401671629', '401547643', '401671635', '401671804', '401671492', '401547581', '401547568', '401547529', '401547639', '401547563', '401772726', '401547555', '401547443', '401547600', '401671634', '401671858', '401772721', '401671730', '401671718', '401671704', '401671691', '401671765', '401671842', '401671829', '401671490', '401547629', '401772832', '401547235', '401547516', '401671876', '401547590', '401547532', '401547641', '401547638', '401671632', '401547619', '401547397', '401772835', '401671783', '401671847', '401671795', '401671865', '401547449', '401671493', '401547594', '401547402', '401671782', '401671617', '401547345', '401547649', '401772833', '401547506', '401547396', '401671767', '401772715', '401772831', '401772918', '401671636', '401772827', '401547575', '401671494', '401547465', '401547432', '401547494', '401547461', '401671801', '401547558', '401671800', '401547353', '401547627', '401671761', '401671694', '401671807', '401547541']
    if not game_ids:
        print("No play_by_play files found.")
        return

    matchups = get_game_matchups(game_ids)

    if not matchups:
        print("Could not retrieve matchup information.")
        return

    print('| Game ID | Season | Matchup |')
    print('|---|---|---|')

    for row in matchups:
        game_id, season, home_team, away_team = row
        matchup = f"{away_team} @ {home_team}"
        print(f'| {game_id} | {season} | {matchup} |')

if __name__ == '__main__':
    main()
